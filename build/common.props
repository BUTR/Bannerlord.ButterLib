<!--EXTERNAL_PROPERTIES: TargetFramework;BANNERLORD_GAME_DIR;BANNERLORD_STABLE_DIR;BANNERLORD_BETA_DIR;GITHUB_ACTIONS;MSBuildThisFileDirectory;OverrideGameVersion-->
<Project>

  <!--Development Variables-->
  <PropertyGroup>
    <!--Module Version-->
    <Version>2.8.11</Version>
    <!--Harmony Version-->
    <HarmonyVersion>2.2.2</HarmonyVersion>
    <HarmonyExtensionsVersion>3.2.0.77</HarmonyExtensionsVersion>
    <HarmonyAnalyzerVersion>1.0.1.50</HarmonyAnalyzerVersion>
    <!--Microsoft Extension Libraries Version-->
    <!--Switching to v7 or any version higher will require BLSE.AssemblyResolver-->
    <!--Also, remove Ben.Demystifier and use the NuGet then-->
    <ExtensionVersion>2.0.0</ExtensionVersion>
    <!--BuildResources Version-->
    <BuildResourcesVersion>1.1.0.102</BuildResourcesVersion>
    <BUTRSharedVersion>3.0.0.137</BUTRSharedVersion>
    <BUTRModuleManagerVersion>5.0.209</BUTRModuleManagerVersion>
  </PropertyGroup>

  <PropertyGroup>
    <Authors>BUTR Team</Authors>
    <Product>ButterLib Library for Bannerlord</Product>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="1.1.1" />
    <PackageReference Include="Serilog" Version="3.0.1" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="3.1.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="$(ExtensionVersion)" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="$(ExtensionVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="$(ExtensionVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="$(ExtensionVersion)" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="$(ExtensionVersion)" />
    <PackageReference Include="Microsoft.Extensions.Primitives" Version="$(ExtensionVersion)" />
    <PackageReference Include="System.Memory" Version="4.5.5" />
    <PackageReference Include="System.Reflection.Metadata" Version="1.8.1" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework) == 'netcoreapp3.1'">
    <FrameworkReference Include="Microsoft.AspNetCore.App"  />
  </ItemGroup>
  
  <PropertyGroup>
    <IsMinimal>true</IsMinimal>
    <IsMinimal Condition="$(Configuration.Contains('Minimal'))">true</IsMinimal>
    <IsStable>false</IsStable>
    <IsStable Condition="$(Configuration.Contains('Stable'))">true</IsStable>
    <IsBeta>false</IsBeta>
    <IsBeta Condition="$(Configuration.Contains('Beta'))">true</IsBeta>
  </PropertyGroup>

  <PropertyGroup>
    <SGVFile>$([System.IO.File]::ReadAllText($(MSBuildThisFileDirectory)/../supported-game-versions.txt))</SGVFile>
  </PropertyGroup>
  <ItemGroup>
    <SGVItem Include="$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`))" />
  </ItemGroup>

  <PropertyGroup Condition="$(OverrideGameVersion) == ''">
    <GameVersionFallback>v1.0.0</GameVersionFallback>
    <!-- Parsing  supported-game-versions.txt -->
    <SGVLineCount>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`).Length)</SGVLineCount>
    <SGVLastEntryIndex>$([MSBuild]::Subtract($(SGVLineCount), 1))</SGVLastEntryIndex>
    <!-- First enrty is Beta, second Stable, last Minimal -->
    <FirstLine  Condition="'$(SGVLineCount)' &gt; 0">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[0])</FirstLine>
    <SecondLine Condition="'$(SGVLineCount)' &gt; 1">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[1])</SecondLine>
    <LastLine   Condition="'$(SGVLineCount)' &gt; 0">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[$(SGVLastEntryIndex)])</LastLine>

    <SecondLine Condition="'$(SecondLine)' == ''">$(FirstLine)</SecondLine>
    <LastLine Condition="'$(LastLine)' == ''">$(SecondLine)</LastLine>
    <!-- -->
    <GameBetaVersion>$(FirstLine)</GameBetaVersion>
    <GameStableVersion>$(SecondLine)</GameStableVersion>
    <GameMinimalVersion>$(LastLine)</GameMinimalVersion>
    <!-- -->
    <GameVersionWithPrefix Condition="$(IsMinimal)">$(GameMinimalVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsStable)">$(GameStableVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsBeta)">$(GameBetaVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(GameVersionWithPrefix) == ''">$(GameVersionFallback)</GameVersionWithPrefix>
    <!-- -->
    <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
  </PropertyGroup>
  <PropertyGroup Condition="$(OverrideGameVersion) != ''">
    <GameVersionWithPrefix>$(OverrideGameVersion)</GameVersionWithPrefix>
    <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
  </PropertyGroup>
  <PropertyGroup>
    <GameVersionFlat>$([System.String]::Copy('$(GameVersion)').Replace('.',''))</GameVersionFlat>
    <GameVersionConstant>v$(GameVersionFlat)</GameVersionConstant>
  </PropertyGroup>

  <PropertyGroup>
    <!--Bannerlord's Root Folder. Leave empty if you want it to be tried to be autoresolved.-->
    <GameFolder Condition="$(IsStable)">$(BANNERLORD_STABLE_DIR)</GameFolder>
    <GameFolder Condition="$(IsBeta)">$(BANNERLORD_BETA_DIR)</GameFolder>
    <GameFolder Condition="$(GameFolder) == ''">$(BANNERLORD_GAME_DIR)</GameFolder>
  </PropertyGroup>

  <!--Automatic Path Resolution-->
  <PropertyGroup>
    <!--Windows-->
    <!--Get from Registry (not working with dotnet right now)-->
    <GameFolder Condition="!Exists($(GameFolder)) AND $(OS) == 'Windows_NT'">$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 261550@InstallLocation)</GameFolder>
    <!--Set a default value if registry value is missing-->
    <GameFolder Condition="!Exists($(GameFolder)) AND $(OS) == 'Windows_NT'">C:\Program Files (x86)\Steam\steamapps\common\Mount &amp; Blade II Bannerlord</GameFolder>
    <!--Unix-->
    <GameFolder Condition="!Exists($(GameFolder)) AND $(OS) == 'Unix'">~/.steam/root/steamapps/common/Mount &amp; Blade II Bannerlord</GameFolder>
  </PropertyGroup>


  <!--GitHub Actions-->
  <PropertyGroup Condition="$(GITHUB_ACTIONS) == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <!--NuGet SorceLink-->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <!--SorceLink-->
  <PropertyGroup>
    <Deterministic>true</Deterministic>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
  </PropertyGroup>
  <!--SorceLink-->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All"/>
  </ItemGroup>
  <!--CI Builds-->
  <ItemGroup Condition="$(TargetFramework) == 'net472' AND $(OS) != 'Windows_NT'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition="'$(GITHUB_ACTIONS)' != 'true'">
    <PackageReference Include="BUTR.Harmony.Analyzer" Version="$(HarmonyAnalyzerVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
