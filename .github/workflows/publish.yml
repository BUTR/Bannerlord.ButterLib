name: Publish

on:
  push:
    branches:
      - master

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
###########################
#          NEXUS          #
###########################
  build-for-nexusmods:
    name: Build for NexusMods
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.x

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Build Bannerlord.ButterLib.Implementation (Stable_Release)
      run: >-
        mkdir $PWD/bannerlord-stable;
        dotnet build src/Bannerlord.ButterLib.Implementation/Bannerlord.ButterLib.Implementation.csproj --configuration Stable_Release -p:GameFolder="$PWD/bannerlord-stable";
    - name: Build Bannerlord.ButterLib.Implementation (Beta_Release)
      run: >-
        mkdir $PWD/bannerlord-beta;
        dotnet build src/Bannerlord.ButterLib.Implementation/Bannerlord.ButterLib.Implementation.csproj --configuration Beta_Release -p:GameFolder="$PWD/bannerlord-beta";

    - name: Upload Bannerlord Stable folder
      uses: actions/upload-artifact@v2
      with:
        name: bannerlord-stable
        path: ./bannerlord-stable/

    - name: Upload Bannerlord Beta folder
      uses: actions/upload-artifact@v2
      with:
        name: bannerlord-beta
        path: ./bannerlord-beta/

  publish-on-nexusmods:
    name: Publish on NexusMods
    needs: build-for-nexusmods
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.x

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Download stable bannerlord folder
      uses: actions/download-artifact@v2
      with:
        name: bannerlord-stable
        path: ./bannerlord
    - name: Download beta bannerlord folder
      uses: actions/download-artifact@v2
      with:
        name: bannerlord-beta
        path: ./bannerlord

    - name: Zip Bannerlord.ButterLib
      run: 7z a -tzip Bannerlord.ButterLib.zip ./bannerlord/*
      shell: pwsh

    - name: Install Bannerlord.ChangelogParser and Bannerlord.NexusmodsUploader
      run: >-
        dotnet tool install -g Bannerlord.ChangelogParser;
        dotnet tool install -g Bannerlord.NexusmodsUploader;
      shell: pwsh

    - name: Run ChangelogParser
      id: changelog
      run: |
        vers="$(bannerlord_changelog_parser latestversion -f "$PWD/changelog.txt")"
        echo "::set-output name=mod_version::$vers"
        desc="$(bannerlord_changelog_parser fulldescription -f "$PWD/changelog.txt")"
        desc="${desc//'%'/'%25'}"
        desc="${desc//$'\n'/'%0A'}"
        desc="${desc//$'\r'/'%0D'}"
        echo "::set-output name=mod_description::$desc"
      shell: bash

    - name: Start Selenoid
      uses: Xotabu4/selenoid-github-action@v1

    - name: Run NexusmodsUploader
      run: >-
        bannerlord_nexusmods_uploader upload -g mountandblade2bannerlord -m 2018 -n "ButterLib"
        -v "v${{steps.changelog.outputs.mod_version}}" -l true -e true -d "${{steps.changelog.outputs.mod_description}}"
        -p "$PWD/Bannerlord.ButterLib.zip";
      env:
        NEXUSMODS_COOKIES_JSON: '${{secrets.NEXUSMODS_COOKIES_JSON}}'
      shell: pwsh

    - name: Password protect Screenshots
      run: 7z a -p${{secrets.SCREENSHOTS_PASSWORD}} Screenshots.7z ./Screenshots/*
      shell: pwsh

    - name: Upload Screenshots Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Screenshots
        path: Screenshots.7z

###########################
#        NUGET/GPR        #
###########################
  publish-on-nuget:
    name: Publish on NuGet (Stable)
    needs: build-for-nexusmods
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.x

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Pack Bannerlord.ButterLib (Release)
      run: dotnet pack src/Bannerlord.ButterLib/Bannerlord.ButterLib.csproj --configuration Release -o "./packages"
      shell: pwsh

    - name: Install Bannerlord.ChangelogParser
      run: dotnet tool install -g Bannerlord.ChangelogParser;
      shell: pwsh

    - name: Run ChangelogParser
      id: changelog
      run: |
        vers="$(bannerlord_changelog_parser latestversion -f "$PWD/changelog.txt")"
        echo "::set-output name=mod_version::$vers"
        desc="$(bannerlord_changelog_parser fulldescription -f "$PWD/changelog.txt")"
        desc="${desc//'%'/'%25'}"
        desc="${desc//$'\n'/'%0A'}"
        desc="${desc//$'\r'/'%0D'}"
        echo "::set-output name=mod_description::$desc"
      shell: bash

    - name: Push to NuGet
      run: dotnet nuget push "./packages/*.nupkg" -k ${{secrets.NUGET_API_KEY}} -s https://www.nuget.org
      shell: pwsh

    - name: Push to GPR
      run: |
           for f in ./packages/*.nupkg
           do
             curl -vX PUT -u "vslee:${{secrets.GITHUB_TOKEN}}" -F package=@$f https://nuget.pkg.github.com/BUTR/
           done
      shell: bash

###########################
#         GITHUB          #
###########################
  publish-on-github:
    name: Publish on GitHub
    runs-on: ubuntu-latest
    needs: build-for-nexusmods
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.x

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Download stable bannerlord folder
      uses: actions/download-artifact@v2
      with:
        name: bannerlord-stable
        path: ./bannerlord
    - name: Download beta bannerlord folder
      uses: actions/download-artifact@v2
      with:
        name: bannerlord-beta
        path: ./bannerlord

    - name: Zip Bannerlord.ButterLib
      run: 7z a -tzip Bannerlord.ButterLib.zip ./bannerlord/*
      shell: pwsh

    - name: Install Bannerlord.ChangelogParser and Bannerlord.NexusmodsUploader
      run: >-
        dotnet tool install -g Bannerlord.ChangelogParser;
        dotnet tool install -g Bannerlord.NexusmodsUploader;
      shell: pwsh

    - name: Run ChangelogParser
      id: changelog
      run: |
        vers="$(bannerlord_changelog_parser latestversion -f "$PWD/changelog.txt")"
        echo "::set-output name=mod_version::$vers"
        desc="$(bannerlord_changelog_parser fulldescription -f "$PWD/changelog.txt")"
        desc="${desc//'%'/'%25'}"
        desc="${desc//$'\n'/'%0A'}"
        desc="${desc//$'\r'/'%0D'}"
        echo "::set-output name=mod_description::$desc"
      shell: bash

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: v${{steps.changelog.outputs.mod_version}}
        release_name: Release ${{steps.changelog.outputs.mod_version}}
        body: ${{steps.changelog.outputs.mod_description}}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./Bannerlord.ButterLib.zip
        asset_name: Bannerlord.ButterLib.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
